{
  "type": "Task",
  "status": "todo",
  "project": "DynamicBlockRenderers",
  "name": "orval + zod client + auto‑renderer stubs",
  "description": "Replace hand‑written fetch helpers with orval‑generated hooks & zod validation.  Auto‑generate block render stubs from backend schema index.",
  "action_items": [
    "## 🔌  ORVAL CLIENT",
    "[ ] **Install deps**  ➜  `npm i -D orval@latest zod openapi-typescript`.",
    "[ ] **orval.config.js**  ➜\n```js\nexport default {\n  output: {\n    mode: 'tags',                        // hooks per tag (Chat, Blocks)\n    target: 'src/api',                  // generated code goes here\n    schemas: 'src/api/schemas',         // zod schemas emitted here\n    client: 'fetch-zod'                 // zod runtime validation!\n  },\n  input: './schemas/api/openapi.json',  // path committed by backend script\n  hooks: {\n    afterAllFilesWrite: ['npm run gen:renderers']\n  }\n};\n```",
    "[ ] **package.json scripts**  ➜  `{ \"gen:api\": \"orval\", \"gen:renderers\": \"ts-node scripts/gen-renderers.ts\" }`.",
    "## 🖼️  RENDERER STUB GENERATOR",
    "[ ] **scripts/gen-renderers.ts**  ➜  Fetch `/schemas/index.json` (local file committed by backend export) and for each unseen `{type,version}` write `components/block_renderers/{type}.v{version}.tsx` with a minimal `<pre>` placeholder.",
    "[ ] **Dynamic loader**  ➜  In `lib/blockRendererRegistry.ts`, use `import.meta.glob('./components/block_renderers/*.tsx')` (lazy) to map filenames `{type}.v{ver}.tsx` → renderer.",
    "## 🧹  REMOVE AJV",
    "[ ] Delete `utils/validateInput.ts` and Ajv glue. orval hooks return zod‑validated data automatically.",
    "## 🔄  PIPELINE",
    "[ ] Update CI: `npm run gen:api` must run after `backend/export_openapi.py`. Fail build if `git diff --exit-code schemas/ src/api/` is non‑zero.",
    "## 🛠️  CODE MOD",
    "[ ] Replace manual `fetchBlocks()` and `createChatRequest()` usages with generated hooks:  `const { data, error } = useGetApiBlocks();`, `await postChatChat(data)`."
  ],
  "success_criteria": [
    "• Running `npm run gen:api` produces `src/api/*` hooks and zod schemas without errors.",
    "• BlockRenderer dynamically imports newly scaffolded `*.tsx` files and shows UnknownBlock only for truly unsupported versions.",
    "• Manual Ajv code is gone; runtime validation errors surface from zod.",
    "• CI fails if schemas or renderers drift."
  ],
  "priority": "high"
}
