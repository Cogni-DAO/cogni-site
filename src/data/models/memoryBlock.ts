/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * Cogni API
 * A minimal FastAPI that directly passes user queries to OpenAI, augmented with Cogni memory.
 * OpenAPI spec version: 0.1.0
 */
import type { MemoryBlockType } from './memoryBlockType';
import type { MemoryBlockSchemaVersion } from './memoryBlockSchemaVersion';
import type { MemoryBlockState } from './memoryBlockState';
import type { MemoryBlockVisibility } from './memoryBlockVisibility';
import type { MemoryBlockBlockVersion } from './memoryBlockBlockVersion';
import type { MemoryBlockParentId } from './memoryBlockParentId';
import type { MemoryBlockMetadata } from './memoryBlockMetadata';
import type { MemoryBlockSourceFile } from './memoryBlockSourceFile';
import type { MemoryBlockSourceUri } from './memoryBlockSourceUri';
import type { MemoryBlockConfidence } from './memoryBlockConfidence';
import type { MemoryBlockCreatedBy } from './memoryBlockCreatedBy';
import type { MemoryBlockEmbedding } from './memoryBlockEmbedding';

/**
 * The primary data structure for representing a unit of memory in the Cogni system experiment.
Aligns with the design specified in project-CogniMemorySystem-POC.json.
Includes schema versioning support (Task 2.0).

NOTE: As of Property-Schema Split implementation, metadata is stored in the
block_properties table rather than as a JSON field on this model.
 */
export interface MemoryBlock {
  /** Globally unique ID for this memory block */
  id?: string;
  /** Block type used to determine structure and relationships */
  type: MemoryBlockType;
  /** Version of the schema this block adheres to (links to node_schemas table) */
  schema_version?: MemoryBlockSchemaVersion;
  /** Primary content or description of the block */
  text: string;
  /** Current state of the block */
  state?: MemoryBlockState;
  /** Visibility level of the block */
  visibility?: MemoryBlockVisibility;
  /** Version number of this block */
  block_version?: MemoryBlockBlockVersion;
  /** ID of the parent block in the hierarchy (foreign key to memory_blocks.id) */
  parent_id?: MemoryBlockParentId;
  /** Whether this block has child blocks (denormalized for fast lookups) */
  has_children?: boolean;
  /**
   * Optional tags for filtering, theming, or metadata
   * @maxItems 20
   */
  tags?: string[];
  /** Custom metadata based on block type (reconstructed from block_properties) */
  metadata?: MemoryBlockMetadata;
  /** Optional source markdown or file name */
  source_file?: MemoryBlockSourceFile;
  /** Optional source link or Logseq block URI */
  source_uri?: MemoryBlockSourceUri;
  /** Confidence scores for this memory block */
  confidence?: MemoryBlockConfidence;
  /** Optional identifier for creator (agent name or user ID) */
  created_by?: MemoryBlockCreatedBy;
  /** ISO timestamp of block creation */
  created_at?: string;
  /** ISO timestamp of last update */
  updated_at?: string;
  /** Optional vector embedding of the block's content */
  embedding?: MemoryBlockEmbedding;
}
