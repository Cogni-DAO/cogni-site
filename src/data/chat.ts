/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * Cogni API
 * A minimal FastAPI that directly passes user queries to OpenAI, augmented with Cogni memory.
 * OpenAPI spec version: 0.1.0
 */
import type {
  CompleteQueryRequest,
  HTTPValidationError
} from './models';



/**
 * @summary Stream Chat
 */
export type streamChatChatPostResponse200 = {
  data: unknown
  status: 200
}

export type streamChatChatPostResponse422 = {
  data: HTTPValidationError
  status: 422
}
    
export type streamChatChatPostResponseComposite = streamChatChatPostResponse200 | streamChatChatPostResponse422;
    
export type streamChatChatPostResponse = streamChatChatPostResponseComposite & {
  headers: Headers;
}

export const getStreamChatChatPostUrl = () => {


  

  return `/chat/`
}

export const streamChatChatPost = async (completeQueryRequest: CompleteQueryRequest, options?: RequestInit): Promise<streamChatChatPostResponse> => {
  
  const res = await fetch(getStreamChatChatPostUrl(),
  {      
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(
      completeQueryRequest,)
  }
)

  const body = [204, 205, 304].includes(res.status) ? null : await res.text()
  const data: streamChatChatPostResponse['data'] = body ? JSON.parse(body) : {}

  return { data, status: res.status, headers: res.headers } as streamChatChatPostResponse
}


